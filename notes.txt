todo:
make delete other paths consider parents of units that made it
allow selecting any player, but giving commands only on human players
attack command & animations
don't allow attacking while moving for some units
repair building command
way to make multiple paths at a time
making new paths should select new ones as well?
don't make units come out in random directions?
allow selecting only 1 building at a time, and no units in addition?
sound
pathfinding
keep non-live paths in yellow areas w/o user help
darker gray tiles should act more conventionally
post to tigsource.com or unity forums?
rename to improbability?
unity 4.2
  builds in unity 4.2 don't display sprites correctly
    setting shader to "Diffuse" displays sprites but without transparency
    using quad primitive doesn't display at all (output_log.txt says "The resource Quad.fbx could not be loaded from the resource file!")
    bug report in "decoherence 4.2.0 minimal" folder
  text asset serialization
  quad primitive
  "Texture importer now has "Alpha is Transparency" setting, which does color dilation to fix edge artifacts on semitransparent textures. It is enabled by default for GUI textures."
  "fullscreen at native resolution" player setting"

if ever allow "min" resources to be <0, must handle these cases w/o letting max resources ever be <0 in replays:
split worker into 2 paths, 1 path makes a mine, other path doesn't
make enough fighters that needs to have the mine to make them
if mine is seen:
  we're ok
if enough fighters are seen:
  delete path w/o mine
if path w/o mine is seen and enough fighters seen that 1 more would require the mine:
  for every unseen unit:
    if seeing this unit would ever make resources negative (even if it becomes positive by the present time), delete this unit

fancy resources algorithm (allow min < 0) draft:
(bug: allows resources to be negative in past as long as it becomes positive by present)
for each unit w/ no child units:
  if playerResource(max except skipping this unit) - unit.rscCollected(no min or max since no child units) < 0:
    delete unit
    do this calculation on unit's parent
def playerResource(skipUnit):
  if skipUnit is child path:
    take paths to get there, but don't add resources collected by skipUnit
  else:
    take paths to get there, but set ret = 0 instead of ret = pathCollected

pathfinding:
tile-based fog of war good?
find disconnected regions
path smoothing
would graph be too big?

other questions:
puzzle brainstorming
work on game in summer with Matthew and/or Zach, then email TJ when further along?

changing the past and wavefunctions levels:
- what they didn't see
  - Matthew's 3/17/2013 email has alternate idea for 1st level
- better than a coin flip
- spreading coherence (objective is to see the entire map)
  - user controls electrons, but some antiprotons on map
  - in q&a explain how nature controls/sees everything (1 player game) & how we measure it, interpretations of quantum mechanics
- retroactive coherence
- do I need another level to show applications of switching particles, or does 1st level show this well enough?
- somehow show how particle can be "coherent" even if not in yellow region
- make levels introducing economic parts of game after making sure they play well in multiplayer
...
- qubits? (might not need this level)
- lucky number computing
  - must introduce "waking up" concept before this level
- CPT level to annihilate the antiproton in negative 10 seconds (only enable CPT button for this level)
- thinking in the present
  - put introduction text in "what they didn't see" repeat
  - initially show detailed animation for each move command, then short animation retracing particle's movement every time after that

paths levels: (find better synonym for "part 2" such as redux?)
- better than a coin flip, part 2
- spreading coherence, part 2
- retroactive coherence, part 2
- snipers

random notes:
- phrase from AI wisdom: "expand selection by radius"
- only share paths if option is checked for a selection of units (don't want units randomly disappearing out of nowhere)
  - if some wavefunctions don't overlap yet, send paths going between those units
- make paths with same parent unit(s) pulse in phase with each other as excuse to say they're coherent (if not in a quantum way)
  - if multiple parent units share some but not all paths with each other, show superposition of their pulsing (maybe with offset positions so it's clearer they're separate)
  - pulse parent units at different frequencies? (faster pulsing can be done with lower amplitude b/c more noticeable)
  - pulse wavefunctions (in different colors for different parent units?) so can say they're coherent too?
- retroactive visibility assumes units don't discontinuously disappear, so would require that paths move into another unit before being deleted and that dead units don't disappear from ground
- when adding saved replays, maybe add timeSim field to Unit.Move (but this doesn't help with tiles)
- tile coherence can be optimized in short term by only calculating it when unit moves onto the tile
  - if happening in present, only need to check that other players can't see the tile
- population limit? (or just make units expensive enough that you can't make too many)
- introduce paths 1st, then introduce wavefunctions as paths going everywhere in a region? (skipping manual time travel)
  - but manual time travel is nice though
  - keep in mind hard to force using time travel in levels if can use paths
- Matthew says have story or something to make game interesting for people not interested in "physics" q&a's
- unit type ideas (Matthew says using real life particles is bad idea)
  - don't need too many unit types b/c time travel & paths already make the game interesting
  - can have ranged units with visible laser paths
    - except can only see own snipers' laser paths (from all possible snipers)
    - other units' range is less than vis radius, so would have decohered by the time they shoot (so ok for anyone to see laser path)
  - have few increments of health, so easier to switch with someone with same health
    - having a healer unit also makes switching units easier
  - can't have mines (they'd have to be visible to the opponent when in seeing range)
  - sniper unit that shoots further than visibility range (but can shoot units that other units see)
    - which sniper shot it?
    - reload slowly so not too powerful?
    - have option to change into different unit type if seen by another player, so using multiple paths doesn't just make snipers easier to find
  - Matthew's unit images can be pixellated to keep them simple
  - workers/miners with low/0 attack (use as "helpers" in levels)
    - make more interesting name for them?
  - marines (generic shooting unit)

unity links:
external version control: https://docs.unity3d.com/Documentation/Manual/ExternalVersionControlSystemSupport.html
multiplayer tutorial: http://docs.unity3d.ru/Tutorials/M2H_Networking_Tutorial/M2H_Networking_Tutorial_Original.pdf
multiplayer project files: http://docs.unity3d.ru/Tutorials/M2H_Networking_Tutorial/M2H_Networking_Tutorial_Files.zip
2d: http://gamasutra.com/blogs/JoshSutphin/20130519/192539/Making_2D_Games_With_Unity.php
gui guide: https://docs.unity3d.com/Documentation/Components/GUIScriptingGuide.html
guilayout reference: https://docs.unity3d.com/Documentation/ScriptReference/GUILayout.html

other links:
binary serialization: https://code.google.com/p/protobuf-net/
serialize at stream position: http://stackoverflow.com/questions/2441608/deserializing-a-type-at-the-current-stream-position-with-protobuf-net
age of empires multiplayer: http://www.gamasutra.com/view/feature/3094/1500_archers_on_a_288_network_.php
ai war optimization (including multiplayer): http://christophermpark.blogspot.com/2009/06/optimizing-30000-ships-in-realtime-in-c.html
multiplayer debugging: http://gafferongames.com/networking-for-game-programmers/debugging-multiplayer-games/
